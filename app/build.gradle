plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id("androidx.navigation.safeargs.kotlin")
}

kapt {
    useBuildCache = true
    javacOptions {
        option("-Xmaxerrs", 500)
    }
}

android {
    compileSdkVersion 32
    buildToolsVersion "31.0.0"

    defaultConfig {
        applicationId "com.js.deepsleep"
        minSdkVersion 24
        targetSdkVersion 32
        versionCode 10
        versionName "1.2.0-rc2"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation":
                                      "$projectDir/schemas".toString()]
            }
        }

    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${buildType.name}-${versionName}.apk"
        }
    }

    // room test
    sourceSets {
        // Adds exported schema location as test app assets.
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }

    buildFeatures {
        dataBinding true // 启用dataBinding
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    //noinspection GradleDependency
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
//    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.8.0'

    //ktx 拓展
    //drawerlayout
    implementation "androidx.drawerlayout:drawerlayout:1.1.1"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.preference:preference-ktx:1.2.0'

    // activity
    def activity_version = "1.6.0-alpha04"
    implementation "androidx.activity:activity-ktx:$activity_version"

    // fragment
    def fragment_version = "1.5.0-rc01"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    // Testing Fragments in Isolation
//    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"

    //Lifecycle
    def lifecycle_version = "2.4.1"
    def arch_version = "2.1.0"
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    // Saved state module for ViewModel
    //noinspection GradleDependency
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    // Annotation processor
    //noinspection LifecycleAnnotationProcessorWithJava8
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    // optional - helpers for implementing LifecycleOwner in a Service
    implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"
    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"
    // optional - ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"
    // optional - Test helpers for LiveData
    testImplementation "androidx.arch.core:core-testing:$arch_version"

    // Navigation
    def nav_version = "2.5.0-rc01"
    // Kotlin
//    implementation "androidx.navigation:navigation-runtime-ktx:$nav_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    // Feature module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"
    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"
    // Jetpack Compose Integration
    implementation "androidx.navigation:navigation-compose:2.5.0-rc01"

    //viewpager2
    implementation "androidx.viewpager2:viewpager2:1.0.0"

    //swiperefreshlayout
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

    // RemotePreferences
    implementation 'com.crossbowffs.remotepreferences:remotepreferences:0.8'

    //Room
    def room_version = "2.4.2"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"
    // optional - Test helpers
    androidTestImplementation "androidx.room:room-testing:$room_version"

    def koin_version = "3.1.6"
    // Koin main features for Android
    implementation "io.insert-koin:koin-android:$koin_version"
    // No more koin-android-viewmodel, koin-android-scope, koin-android-fragment
    // Koin Test
    testImplementation "io.insert-koin:koin-test:$koin_version"
    testImplementation "io.insert-koin:koin-test-junit4:$koin_version"

    // Java Compatibility
    implementation "io.insert-koin:koin-android-compat:$koin_version"
    // Jetpack WorkManager
    implementation "io.insert-koin:koin-androidx-workmanager:$koin_version"
    // Navigation Graph
    implementation "io.insert-koin:koin-androidx-navigation:$koin_version"
    // Jetpack Compose
    implementation "io.insert-koin:koin-androidx-compose:$koin_version"

    implementation 'androidx.work:work-runtime-ktx:2.7.1'

//    // koin latest stable
//    def koin_version = '2.2.2'
//    // Koin AndroidX Scope features
//    implementation "org.koin:koin-androidx-scope:$koin_version"
//    // Koin AndroidX ViewModel features
//    implementation "org.koin:koin-androidx-viewmodel:$koin_version"
//    // Koin AndroidX Fragment features
//    implementation "org.koin:koin-androidx-fragment:$koin_version"
//    // Koin AndroidX WorkManager
//    implementation "org.koin:koin-androidx-workmanager:$koin_version"
//    // Koin AndroidX Jetpack Compose
//    implementation "org.koin:koin-androidx-compose:$koin_version"
//    // Koin AndroidX Experimental features
//    implementation "org.koin:koin-androidx-ext:$koin_version"

    //gson
    implementation 'com.google.code.gson:gson:2.8.9'

    //glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    //Xposed
    compileOnly 'de.robv.android.xposed:api:82'
    //如果需要引入文档，方便查看的话
    compileOnly 'de.robv.android.xposed:api:82:sources'

    //androidX test
    // Core library
    androidTestImplementation 'androidx.test:core:1.4.0'

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'

    // Assertions
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.ext:truth:1.4.0'
    androidTestImplementation 'com.google.truth:truth:1.1.2'

    // Espresso dependencies
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-accessibility:3.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-web:3.4.0'
    androidTestImplementation 'androidx.test.espresso.idling:idling-concurrent:3.4.0'

    // The following Espresso dependency can be either "implementation"
    // or "androidTestImplementation", depending on whether you want the
    // dependency to appear on your APK's compile classpath or the test APK
    // classpath.
    androidTestImplementation 'androidx.test.espresso:espresso-idling-resource:3.4.0'


//    // Core library
//    androidTestImplementation 'androidx.test:core:1.3.0'
//    // AndroidJUnitRunner and JUnit Rules
//    androidTestImplementation 'androidx.test:runner:1.3.0'
//    androidTestImplementation 'androidx.test:rules:1.3.0'
//    // Assertions
//    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
//    androidTestImplementation 'androidx.test.ext:truth:1.3.0'
//    androidTestImplementation 'com.google.truth:truth:1.0.1'
//    // Espresso dependencies
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
//    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.3.0'
//    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.3.0'
//    androidTestImplementation 'androidx.test.espresso:espresso-accessibility:3.3.0'
//    androidTestImplementation 'androidx.test.espresso:espresso-web:3.3.0'
//    androidTestImplementation 'androidx.test.espresso.idling:idling-concurrent:3.3.0'

    // The following Espresso dependency can be either "implementation"
    // or "androidTestImplementation", depending on whether you want the
    // dependency to appear on your APK's compile classpath or the test APK
    // classpath.
    androidTestImplementation 'androidx.test.espresso:espresso-idling-resource:3.4.0'


    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}